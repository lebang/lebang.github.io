(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{217:function(a,t,s){"use strict";s.r(t);var e=s(28),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"位运算简述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算简述"}},[a._v("#")]),a._v(" 位运算简述")]),a._v(" "),s("h4",{attrs:{id:"什么是位运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是位运算"}},[a._v("#")]),a._v(" 什么是位运算")]),a._v(" "),s("p",[a._v("  程序中的数在计算机内存中都是以二进制的形式存储的，位运算就是对内存中的二进制数直接进行操作。由于位运算直接对内存数据进行操作，不需要转换成十进制，因此处理速度很快。")]),a._v(" "),s("h4",{attrs:{id:"位运算操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位运算操作符"}},[a._v("#")]),a._v(" 位运算操作符")]),a._v(" "),s("ol",[s("li",[a._v("与运算符(and) "),s("strong",[a._v("&")]),a._v(": 两个位都是1时，结果为1，否则为0")])]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("      10011\n    & 11001\n    ------------\n      10001\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("或运算符(or) "),s("strong",[a._v("|")]),a._v(": 两个位都是0时，结果才为0，否则为1")])]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("      10011\n    & 11001\n    ------------\n      11011\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("异或运算符(xor) "),s("strong",[a._v("^")]),a._v(": 两个位相同则为0，不同则为1")])]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("      10011\n    & 11001\n    ------------\n      01010\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("取反运算(not) "),s("strong",[a._v("~")]),a._v(": 0则变为1，1则变为0")])]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("     ~10011\n    ------------\n      01100\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[a._v("左移运算(shl) "),s("strong",[a._v("<<")]),a._v(": 向左进行移位操作，高位丢弃，低位补0")]),a._v(" "),s("li",[a._v("右移运算(shr) "),s("strong",[a._v(">>")]),a._v(": 向右进行移位操作，无符号数，高位补0，有符号数，高位补符号树")])]),a._v(" "),s("h4",{attrs:{id:"常见的位运算应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的位运算应用"}},[a._v("#")]),a._v(" 常见的位运算应用")]),a._v(" "),s("ol",[s("li",[a._v("位移实现乘除")])]),a._v(" "),s("p",[a._v("数num右移一位，相当于num/2；左移一位，相当于num*2")]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    let num = 2;\n    num >> 1   // --\x3e 1\n    num << 1   // --\x3e 4\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("与运算判断奇偶")])]),a._v(" "),s("p",[a._v("根据数的最后一位来判断，0是欧偶数，1为奇数")]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    if(0===(num&1)){\n        // num 是偶数\n    }\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("正负数交换\n整数取反加1，正好变成其对应的负数，负数取反加1，为其自己")])]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    ~2+1    // --\x3e -2\n    ~(-2)+1 // --\x3e 2\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("交换两数")])]),a._v(" "),s("p",[a._v("使用临时变量")]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    let temp = a;\n    a = b;\n    b = temp;\n")])])]),s("p",[a._v("不使用临时变量")]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    a = a + b;\n    b = a - b;\n    a = a - b;\n")])])]),s("p",[a._v("位与操作")]),a._v(" "),s("div",{staticClass:"language-nohighlight extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    a ^= b; // --\x3e a = a^b\n    b ^= a; // --\x3e b = b^a^b = (b^b)^a = a\n    a ^= b; // --\x3e a = a^b^a = (a^a)^b = b\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);